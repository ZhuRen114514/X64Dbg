name: Build Project

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }}-${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows builds
          - os: windows-latest
            arch: x86_64
            qt_ver: '5.15.2'
            msvc: win64_msvc2019_64
          - os: windows-latest
            arch: arm64
            qt_ver: '5.15.2'
            msvc: win64_msvc2019_arm64

          # macOS builds
          - os: macos-latest
            arch: x86_64
            qt_ver: '5.15.2'
            macos: clang_64
          - os: macos-latest
            arch: arm64
            qt_ver: '5.15.2'
            macos: darwin_arm64

          # Linux builds
          - os: ubuntu-latest
            arch: x86_64
            qt_ver: '5.15.2'
            linux: gcc_64
          - os: ubuntu-latest
            arch: arm64
            qt_ver: '5.15.2'
            linux: gcc_arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt_ver }}
        host: windows # Will be ignored except on Windows
        target: ${{ matrix.msvc || matrix.macos || matrix.linux }}
        dir: ${{ github.workspace }}/Qt

    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgl1-mesa-dev

    - name: Build Core Library
      shell: cmd
      run: |
        set PATH=%PATH%;%CD%\Qt\bin
        qmake YunYooDbgCore.pro -spec %QMAKE_SPEC%
        nmake || jom

    - name: Build GUI Library
      shell: cmd
      run: |
        set PATH=%PATH%;%CD%\Qt\bin
        qmake gui/x64dbglib.pro -spec %QMAKE_SPEC% ${{ matrix.os == 'Windows' && 'QMAKE_SPEC=win32-clang-msvc' }}
        nmake || jom

    - name: Build A64Dbg
      shell: cmd
      run: |
        set PATH=%PATH%;%CD%\Qt\bin
        qmake A64Dbg.pro -spec %QMAKE_SPEC% ${{ matrix.os == 'Windows' && 'QMAKE_SPEC=win32-clang-msvc' }}
        nmake || jom

    - name: Build VMPStudio
      shell: cmd
      run: |
        set PATH=%PATH%;%CD%\Qt\bin
        qmake VMPStudio.pro -spec %QMAKE_SPEC% ${{ matrix.os == 'Windows' && 'QMAKE_SPEC=win32-clang-msvc' }}
        nmake || jom

    - name: Collect artifacts
      run: |
        mkdir release
        cp -r {A64Dbg,VMPStudio}/*.exe release/ 2>/dev/null || true
        cp -r {A64Dbg,VMPStudio}/*.app release/ 2>/dev/null || true
        cp LICENSE README.X64DBG.md release/

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Binaries-${{ matrix.os }}-${{ matrix.arch }}
        path: release/
