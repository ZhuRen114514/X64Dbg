name: Build Windows Release

on:
  push:
    tags:
      - "v*"  # 触发条件：当推送以 "v" 开头的标签时（例如 v1.0.0）

jobs:
  build:
    runs-on: windows-latest  # 使用 GitHub 提供的 Windows 环境

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.0  # 根据项目需求选择 Qt 版本（可能需要调整）
          arch: win64_msvc2019_64  # 使用 MSVC 工具链

      - name: 设置环境变量
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          echo "QMAKE_SPEC=win32-clang-msvc" >> %GITHUB_ENV

      - name: 构建核心库 (YunYooDbgCore)
        shell: cmd
        run: |
          qmake YunYooDbgCore.pro -spec %QMAKE_SPEC%
          nmake

      - name: 构建 GUI 库 (x64dbglib)
        shell: cmd
        run: |
          cd gui
          qmake x64dbglib.pro -spec %QMAKE_SPEC%
          nmake
          cd ..

      - name: 构建 A64Dbg 主程序
        shell: cmd
        run: |
          qmake A64Dbg.pro -spec %QMAKE_SPEC%
          nmake

      - name: 构建 VMPStudio 主程序
        shell: cmd
        run: |
          qmake VMPStudio.pro -spec %QMAKE_SPEC%
          nmake

      - name: 打包 Release 文件
        shell: cmd
        run: |
          7z a -r X64Dbg-Windows-Release.zip ./release/*.exe ./release/*.dll

      - name: 上传 Release 产物
        uses: actions/upload-artifact@v4
        with:
          name: X64Dbg-Windows-Release
          path: X64Dbg-Windows-Release.zip

      - name: 创建 GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: X64Dbg-Windows-Release.zip
