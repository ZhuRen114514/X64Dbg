static const char *syscallName(int sysno) {
  switch (sysno) {
    case 0:
      return "__NR_io_setup";
    case 1:
      return "__NR_io_destroy";
    case 2:
      return "__NR_io_submit";
    case 3:
      return "__NR_io_cancel";
    case 4:
      return "__NR_io_getevents";
    case 5:
      return "__NR_setxattr";
    case 6:
      return "__NR_lsetxattr";
    case 7:
      return "__NR_fsetxattr";
    case 8:
      return "__NR_getxattr";
    case 9:
      return "__NR_lgetxattr";
    case 10:
      return "__NR_fgetxattr";
    case 11:
      return "__NR_listxattr";
    case 12:
      return "__NR_llistxattr";
    case 13:
      return "__NR_flistxattr";
    case 14:
      return "__NR_removexattr";
    case 15:
      return "__NR_lremovexattr";
    case 16:
      return "__NR_fremovexattr";
    case 17:
      return "__NR_getcwd";
    case 18:
      return "__NR_lookup_dcookie";
    case 19:
      return "__NR_eventfd2";
    case 20:
      return "__NR_epoll_create1";
    case 21:
      return "__NR_epoll_ctl";
    case 22:
      return "__NR_epoll_pwait";
    case 23:
      return "__NR_dup";
    case 24:
      return "__NR_dup3";
    case 25:
      return "__NR3264_fcntl";
    case 26:
      return "__NR_inotify_init1";
    case 27:
      return "__NR_inotify_add_watch";
    case 28:
      return "__NR_inotify_rm_watch";
    case 29:
      return "__NR_ioctl";
    case 30:
      return "__NR_ioprio_set";
    case 31:
      return "__NR_ioprio_get";
    case 32:
      return "__NR_flock";
    case 33:
      return "__NR_mknodat";
    case 34:
      return "__NR_mkdirat";
    case 35:
      return "__NR_unlinkat";
    case 36:
      return "__NR_symlinkat";
    case 37:
      return "__NR_linkat";
    case 38:
      return "__NR_renameat";
    case 39:
      return "__NR_umount2";
    case 40:
      return "__NR_mount";
    case 41:
      return "__NR_pivot_root";
    case 42:
      return "__NR_nfsservctl";
    case 43:
      return "__NR3264_statfs";
    case 44:
      return "__NR3264_fstatfs";
    case 45:
      return "__NR3264_truncate";
    case 46:
      return "__NR3264_ftruncate";
    case 47:
      return "__NR_fallocate";
    case 48:
      return "__NR_faccessat";
    case 49:
      return "__NR_chdir";
    case 50:
      return "__NR_fchdir";
    case 51:
      return "__NR_chroot";
    case 52:
      return "__NR_fchmod";
    case 53:
      return "__NR_fchmodat";
    case 54:
      return "__NR_fchownat";
    case 55:
      return "__NR_fchown";
    case 56:
      return "__NR_openat";
    case 57:
      return "__NR_close";
    case 58:
      return "__NR_vhangup";
    case 59:
      return "__NR_pipe2";
    case 60:
      return "__NR_quotactl";
    case 61:
      return "__NR_getdents64";
    case 62:
      return "__NR3264_lseek";
    case 63:
      return "__NR_read";
    case 64:
      return "__NR_write";
    case 65:
      return "__NR_readv";
    case 66:
      return "__NR_writev";
    case 67:
      return "__NR_pread64";
    case 68:
      return "__NR_pwrite64";
    case 69:
      return "__NR_preadv";
    case 70:
      return "__NR_pwritev";
    case 71:
      return "__NR3264_sendfile";
    case 72:
      return "__NR_pselect6";
    case 73:
      return "__NR_ppoll";
    case 74:
      return "__NR_signalfd4";
    case 75:
      return "__NR_vmsplice";
    case 76:
      return "__NR_splice";
    case 77:
      return "__NR_tee";
    case 78:
      return "__NR_readlinkat";
    case 79:
      return "__NR3264_fstatat";
    case 80:
      return "__NR3264_fstat";
    case 81:
      return "__NR_sync";
    case 82:
      return "__NR_fsync";
    case 83:
      return "__NR_fdatasync";
    // case 84: return "__NR_sync_file_range2";
    case 84:
      return "__NR_sync_file_range";
    case 85:
      return "__NR_timerfd_create";
    case 86:
      return "__NR_timerfd_settime";
    case 87:
      return "__NR_timerfd_gettime";
    case 88:
      return "__NR_utimensat";
    case 89:
      return "__NR_acct";
    case 90:
      return "__NR_capget";
    case 91:
      return "__NR_capset";
    case 92:
      return "__NR_personality";
    case 93:
      return "__NR_exit";
    case 94:
      return "__NR_exit_group";
    case 95:
      return "__NR_waitid";
    case 96:
      return "__NR_set_tid_address";
    case 97:
      return "__NR_unshare";
    case 98:
      return "__NR_futex";
    case 99:
      return "__NR_set_robust_list";
    case 100:
      return "__NR_get_robust_list";
    case 101:
      return "__NR_nanosleep";
    case 102:
      return "__NR_getitimer";
    case 103:
      return "__NR_setitimer";
    case 104:
      return "__NR_kexec_load";
    case 105:
      return "__NR_init_module";
    case 106:
      return "__NR_delete_module";
    case 107:
      return "__NR_timer_create";
    case 108:
      return "__NR_timer_gettime";
    case 109:
      return "__NR_timer_getoverrun";
    case 110:
      return "__NR_timer_settime";
    case 111:
      return "__NR_timer_delete";
    case 112:
      return "__NR_clock_settime";
    case 113:
      return "__NR_clock_gettime";
    case 114:
      return "__NR_clock_getres";
    case 115:
      return "__NR_clock_nanosleep";
    case 116:
      return "__NR_syslog";
    case 117:
      return "__NR_ptrace";
    case 118:
      return "__NR_sched_setparam";
    case 119:
      return "__NR_sched_setscheduler";
    case 120:
      return "__NR_sched_getscheduler";
    case 121:
      return "__NR_sched_getparam";
    case 122:
      return "__NR_sched_setaffinity";
    case 123:
      return "__NR_sched_getaffinity";
    case 124:
      return "__NR_sched_yield";
    case 125:
      return "__NR_sched_get_priority_max";
    case 126:
      return "__NR_sched_get_priority_min";
    case 127:
      return "__NR_sched_rr_get_interval";
    case 128:
      return "__NR_restart_syscall";
    case 129:
      return "__NR_kill";
    case 130:
      return "__NR_tkill";
    case 131:
      return "__NR_tgkill";
    case 132:
      return "__NR_sigaltstack";
    case 133:
      return "__NR_rt_sigsuspend";
    case 134:
      return "__NR_rt_sigaction";
    case 135:
      return "__NR_rt_sigprocmask";
    case 136:
      return "__NR_rt_sigpending";
    case 137:
      return "__NR_rt_sigtimedwait";
    case 138:
      return "__NR_rt_sigqueueinfo";
    case 139:
      return "__NR_rt_sigreturn";
    case 140:
      return "__NR_setpriority";
    case 141:
      return "__NR_getpriority";
    case 142:
      return "__NR_reboot";
    case 143:
      return "__NR_setregid";
    case 144:
      return "__NR_setgid";
    case 145:
      return "__NR_setreuid";
    case 146:
      return "__NR_setuid";
    case 147:
      return "__NR_setresuid";
    case 148:
      return "__NR_getresuid";
    case 149:
      return "__NR_setresgid";
    case 150:
      return "__NR_getresgid";
    case 151:
      return "__NR_setfsuid";
    case 152:
      return "__NR_setfsgid";
    case 153:
      return "__NR_times";
    case 154:
      return "__NR_setpgid";
    case 155:
      return "__NR_getpgid";
    case 156:
      return "__NR_getsid";
    case 157:
      return "__NR_setsid";
    case 158:
      return "__NR_getgroups";
    case 159:
      return "__NR_setgroups";
    case 160:
      return "__NR_uname";
    case 161:
      return "__NR_sethostname";
    case 162:
      return "__NR_setdomainname";
    case 163:
      return "__NR_getrlimit";
    case 164:
      return "__NR_setrlimit";
    case 165:
      return "__NR_getrusage";
    case 166:
      return "__NR_umask";
    case 167:
      return "__NR_prctl";
    case 168:
      return "__NR_getcpu";
    case 169:
      return "__NR_gettimeofday";
    case 170:
      return "__NR_settimeofday";
    case 171:
      return "__NR_adjtimex";
    case 172:
      return "__NR_getpid";
    case 173:
      return "__NR_getppid";
    case 174:
      return "__NR_getuid";
    case 175:
      return "__NR_geteuid";
    case 176:
      return "__NR_getgid";
    case 177:
      return "__NR_getegid";
    case 178:
      return "__NR_gettid";
    case 179:
      return "__NR_sysinfo";
    case 180:
      return "__NR_mq_open";
    case 181:
      return "__NR_mq_unlink";
    case 182:
      return "__NR_mq_timedsend";
    case 183:
      return "__NR_mq_timedreceive";
    case 184:
      return "__NR_mq_notify";
    case 185:
      return "__NR_mq_getsetattr";
    case 186:
      return "__NR_msgget";
    case 187:
      return "__NR_msgctl";
    case 188:
      return "__NR_msgrcv";
    case 189:
      return "__NR_msgsnd";
    case 190:
      return "__NR_semget";
    case 191:
      return "__NR_semctl";
    case 192:
      return "__NR_semtimedop";
    case 193:
      return "__NR_semop";
    case 194:
      return "__NR_shmget";
    case 195:
      return "__NR_shmctl";
    case 196:
      return "__NR_shmat";
    case 197:
      return "__NR_shmdt";
    case 198:
      return "__NR_socket";
    case 199:
      return "__NR_socketpair";
    case 200:
      return "__NR_bind";
    case 201:
      return "__NR_listen";
    case 202:
      return "__NR_accept";
    case 203:
      return "__NR_connect";
    case 204:
      return "__NR_getsockname";
    case 205:
      return "__NR_getpeername";
    case 206:
      return "__NR_sendto";
    case 207:
      return "__NR_recvfrom";
    case 208:
      return "__NR_setsockopt";
    case 209:
      return "__NR_getsockopt";
    case 210:
      return "__NR_shutdown";
    case 211:
      return "__NR_sendmsg";
    case 212:
      return "__NR_recvmsg";
    case 213:
      return "__NR_readahead";
    case 214:
      return "__NR_brk";
    case 215:
      return "__NR_munmap";
    case 216:
      return "__NR_mremap";
    case 217:
      return "__NR_add_key";
    case 218:
      return "__NR_request_key";
    case 219:
      return "__NR_keyctl";
    case 220:
      return "__NR_clone";
    case 221:
      return "__NR_execve";
    case 222:
      return "__NR3264_mmap";
    case 223:
      return "__NR3264_fadvise64";
    case 224:
      return "__NR_swapon";
    case 225:
      return "__NR_swapoff";
    case 226:
      return "__NR_mprotect";
    case 227:
      return "__NR_msync";
    case 228:
      return "__NR_mlock";
    case 229:
      return "__NR_munlock";
    case 230:
      return "__NR_mlockall";
    case 231:
      return "__NR_munlockall";
    case 232:
      return "__NR_mincore";
    case 233:
      return "__NR_madvise";
    case 234:
      return "__NR_remap_file_pages";
    case 235:
      return "__NR_mbind";
    case 236:
      return "__NR_get_mempolicy";
    case 237:
      return "__NR_set_mempolicy";
    case 238:
      return "__NR_migrate_pages";
    case 239:
      return "__NR_move_pages";
    case 240:
      return "__NR_rt_tgsigqueueinfo";
    case 241:
      return "__NR_perf_event_open";
    case 242:
      return "__NR_accept4";
    case 243:
      return "__NR_recvmmsg";
    case 244:
      return "__NR_arch_specific_syscall";
    case 260:
      return "__NR_wait4";
    case 261:
      return "__NR_prlimit64";
    case 262:
      return "__NR_fanotify_init";
    case 263:
      return "__NR_fanotify_mark";
    case 264:
      return "__NR_name_to_handle_at";
    case 265:
      return "__NR_open_by_handle_at";
    case 266:
      return "__NR_clock_adjtime";
    case 267:
      return "__NR_syncfs";
    case 268:
      return "__NR_setns";
    case 269:
      return "__NR_sendmmsg";
    case 270:
      return "__NR_process_vm_readv";
    case 271:
      return "__NR_process_vm_writev";
    case 272:
      return "__NR_kcmp";
    case 273:
      return "__NR_finit_module";
    case 274:
      return "__NR_sched_setattr";
    case 275:
      return "__NR_sched_getattr";
    case 276:
      return "__NR_renameat2";
    case 277:
      return "__NR_seccomp";
    case 278:
      return "__NR_getrandom";
    case 279:
      return "__NR_memfd_create";
    case 280:
      return "__NR_bpf";
    case 281:
      return "__NR_execveat";
    case 282:
      return "__NR_userfaultfd";
    case 283:
      return "__NR_membarrier";
    case 284:
      return "__NR_mlock2";
    case 285:
      return "__NR_copy_file_range";
    case 286:
      return "__NR_preadv2";
    case 287:
      return "__NR_pwritev2";
    case 288:
      return "__NR_pkey_mprotect";
    case 289:
      return "__NR_pkey_alloc";
    case 290:
      return "__NR_pkey_free";
    case 291:
      return "__NR_statx";
    case 292:
      return "__NR_io_pgetevents";
    case 293:
      return "__NR_rseq";
    case 294:
      return "__NR_kexec_file_load";
    case 403:
      return "__NR_clock_gettime64";
    case 404:
      return "__NR_clock_settime64";
    case 405:
      return "__NR_clock_adjtime64";
    case 406:
      return "__NR_clock_getres_time64";
    case 407:
      return "__NR_clock_nanosleep_time64";
    case 408:
      return "__NR_timer_gettime64";
    case 409:
      return "__NR_timer_settime64";
    case 410:
      return "__NR_timerfd_gettime64";
    case 411:
      return "__NR_timerfd_settime64";
    case 412:
      return "__NR_utimensat_time64";
    case 413:
      return "__NR_pselect6_time64";
    case 414:
      return "__NR_ppoll_time64";
    case 416:
      return "__NR_io_pgetevents_time64";
    case 417:
      return "__NR_recvmmsg_time64";
    case 418:
      return "__NR_mq_timedsend_time64";
    case 419:
      return "__NR_mq_timedreceive_time64";
    case 420:
      return "__NR_semtimedop_time64";
    case 421:
      return "__NR_rt_sigtimedwait_time64";
    case 422:
      return "__NR_futex_time64";
    case 423:
      return "__NR_sched_rr_get_interval_time64";
    case 424:
      return "__NR_pidfd_send_signal";
    case 425:
      return "__NR_io_uring_setup";
    case 426:
      return "__NR_io_uring_enter";
    case 427:
      return "__NR_io_uring_register";
    case 428:
      return "__NR_open_tree";
    case 429:
      return "__NR_move_mount";
    case 430:
      return "__NR_fsopen";
    case 431:
      return "__NR_fsconfig";
    case 432:
      return "__NR_fsmount";
    case 433:
      return "__NR_fspick";
    case 434:
      return "__NR_pidfd_open";
    case 435:
      return "__NR_clone3";
    case 436:
      return "__NR_close_range";
    case 437:
      return "__NR_openat2";
    case 438:
      return "__NR_pidfd_getfd";
    case 439:
      return "__NR_faccessat2";
    case 440:
      return "__NR_process_madvise";
    case 441:
      return "__NR_epoll_pwait2";
    case 442:
      return "__NR_mount_setattr";
    case 443:
      return "__NR_quotactl_fd";
    case 444:
      return "__NR_landlock_create_ruleset";
    case 445:
      return "__NR_landlock_add_rule";
    case 446:
      return "__NR_landlock_restrict_self";
    case 447:
      return "__NR_memfd_secret";
    case 448:
      return "__NR_process_mrelease";
    case 449:
      return "__NR_syscalls";
    default:
      return nullptr;
  }
}
